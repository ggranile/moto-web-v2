---
import Layout from "@/layouts/Layout.astro";
import MotoBackground from "@/assets/moto-background.png";
import MotoEyes from "@/assets/moto-eyes.png";
import MotoEyesV2 from "@/assets/moto-eyes-v2.jpg";
import MotoWelcome from "@/assets/moto-welcome.png";
import Menu from "@/assets/menu.svg";
import MotoFace from "@/assets/moto-face.png";
import CopyIcon from "@/assets/copy.svg";
---


<Layout>
  <div class="scroll-container"></div>
  
  <section id="content" class="fixed inset-0 bg-black text-neutral-100 z-10 min-h-screen">

  <canvas id="space" class="absolute inset-0 block w-full h-full"></canvas>

  <div class="relative z-10 mx-auto max-w-6xl p-6 sm:p-8 w-full">
  
    <!-- Grid principal -->
  
    <div class="grid gap-4 lg:grid-cols-2">
    
      <!-- Bento 1: Logo + título -->
      
      <section class="rounded-2xl border-3 border-pink-300 bg-[rgba(51,56,59,0.8)] p-2 sm:p-6 flex flex-col items-center text-center space-y-4">
        <img src={MotoFace.src} alt="Moto Face" class="w-40 sm:w-20 lg:w-30 aspect-square object-contain select-none" />
        <h1 class="text-6xl sm:text-5xl font-spray text-[#97d6c1] tracking-wide">THE TICKER IS</h1>
        <h2 class="text-[#e4e7e9] text-7xl font-heavitas">$MOTO</h2>
      </section>

      <!-- Bento 2: STATS -->
      <section class="rounded-2xl border-3 border-pink-300 bg-[rgba(51,56,59,0.8)] p-6">
        <div class="flex flex-row items-center space-x-1">
          <img src={MotoEyesV2.src} alt="Moto Eyes" class="w-12 h-12 p-1 rounded-full object-cover shadow-[0_0_12px_#f9a8d4] select-none" />
          <h3 class="text-3xl sm:text-xl font-heavitas tracking-wider pl-3">Token Information</h3>
        </div>

        <!-- Fila 1: Precio (2/3) + Holders (1/3) -->
    
        <div class="mt-6 grid grid-cols-3 gap-4">
          <div class="col-span-2 rounded-2xl border-3 border-pink-300 p-2 text-center">
            <div class="text-3xl font-digital text-[#97d6c1]" id="stat-price">$ —</div>
            <div class="text-xs uppercase tracking-wide text-neutral-400">Price</div>
          </div>

          <div class="col-span-1 rounded-2xl border-3 border-pink-300 p-2 text-center">
            <div class="text-3xl font-digital text-[#97d6c1]" id="stat-holders">—</div>
            <div class="text-xs uppercase tracking-wide text-neutral-400">Holders</div>
          </div>
        </div>

        <!-- Fila 2: Market Cap + Volumen 24h -->
        
        <div class="mt-4 grid grid-cols-2 gap-4">
          <div class="rounded-2xl border-3 border-pink-300 p-2 text-center">
            <div class="text-3xl font-digital text-[#97d6c1]" id="stat-mcap">$ —</div>
            <div class="text-xs uppercase tracking-wide text-neutral-400">Market Cap</div>
          </div>

          <div class="rounded-2xl border-3 border-pink-300 p-2 text-center">
            <div class="text-3xl font-digital text-[#97d6c1]" id="stat-vol24">$ —</div>
            <div class="text-xs uppercase tracking-wide text-neutral-400">Volume (24h)</div>
          </div>
        </div>

        <!-- Fila 3: Contrato -->
        
        <div class="mt-4 rounded-2xl border-3 border-pink-300 p-2 flex">
          <button id="copy-contract" class="ml-2 text-[#e4e7e9] hover:text-pink-300 cursor-pointer">
            <CopyIcon class="w-5 h-5" />
          </button>
          <div class="text-xl font-heavitas text-pretty ml-3">0x9a9de07629EF283c2d700eFD39...</div>
        </div>
      </section>

      <!-- Bento 3: Descripción -->

      <section class="lg:col-span-2 rounded-2xl border-3 border-pink-300 bg-[rgba(51,56,59,0.8)] p-6 sm:p-6">
        <div class="flex flex-row items-center space-x-1 ">
          <img  src={MotoEyesV2.src} alt="Moto Eyes" class="w-12 h-12 p-1 rounded-full object-cover shadow-[0_0_12px_#f9a8d4] select-none"/>
          <h3 class="text-3xl sm:text-xl font-heavitas tracking-wider pl-3">WHAT IS MOTO?</h3>
        </div>
        <p class="font-heavitas text-[#e4e7e9] mt-6 sm:text-xl leading-relaxed text-pretty text-center lg:text-left">
          Launched on <span class="font-spray text-2xl text-[#97d6c1] tracking-wider">Base</span> through Toshi Mart and adopted by the <span class="font-spray text-2xl text-[#97d6c1] tracking-wider">OG Toshi community</span>, Moto has grown from a meme into <span class="font-spray text-2xl text-[#97d6c1] tracking-wider">the face of Toshi Mart.</span> The black cat carries the spirit of Satoshi Naka<span class="font-spray text-2xl text-[#97d6c1] tracking-wider"> moto</span> in its name. 100% community-driven.
        </p>
      </section>

      <!-- Bento 4: Buy Moto -->
      
      <section class="lg:col-span-2 rounded-2xl border-3 border-pink-300 bg-[rgba(51,56,59,0.8)] p-6 sm:p-6">
        <div class="flex flex-row items-center space-x-1 ">
          <img  src={MotoEyesV2.src} alt="Moto Eyes" class="w-12 h-12 p-1 rounded-full object-cover shadow-[0_0_12px_#f9a8d4] select-none"/>
          <h3 class="text-3xl sm:text-xl font-heavitas tracking-wider pl-3">WHERE I CAN APE $MOTO?</h3>
        </div>
        <p class="font-heavitas text-[#e4e7e9] mt-6 sm:text-xl leading-relaxed text-pretty text-center lg:text-left">
          Launched on <span class="font-spray text-2xl text-[#97d6c1] tracking-wider">Base</span> through Toshi Mart and adopted by the <span class="font-spray text-2xl text-[#97d6c1] tracking-wider">OG Toshi community</span>, Moto has grown from a meme into <span class="font-spray text-2xl text-[#97d6c1] tracking-wider">the face of Toshi Mart.</span> The black cat carries the spirit of Satoshi Naka<span class="font-spray text-2xl text-[#97d6c1] tracking-wider"> moto</span> in its name. 100% community-driven.
        </p>
      </section>.

    </div>

  </div>

</section>

  <section id="after" class="relative bg-[#33383b] text-neutral-100 min-h-screen flex items-center justify-center z-20">
    <div class="mx-auto max-w-3xl p-8 w-full text-center">
      <h2 class="text-3xl font-semibold mb-4">Nueva Sección</h2>
      <p class="text-lg opacity-90">Contenido adicional que aparece al terminar la intro.</p>
    </div>
  </section>

  <section id="intro" class="fixed inset-0 h-screen overflow-hidden z-20">
    <div id="light-background" class="absolute inset-0 bg-[#e4e7e9] z-5 opacity-0"></div>
    <div id="logo-mask" class="absolute w-full h-full">
      <picture id="moto" class="absolute h-full scale-112 block overflow-hidden">
        <img id="moto-background" src={MotoBackground.src} class="w-full h-full object-cover" />
      </picture>
    </div>
    <div id="outside-black" class="absolute inset-0 pointer-events-none z-20"></div>
    <img id="eyes" src={MotoEyes.src} alt="eyes" class="absolute left-1/2 top-[11.5%] -translate-x-1/2 pointer-events-none z-20 w-[clamp(20vh,20%,25vh)]" />
    <img id="moto-welcome" class="mask-fade-b absolute left-1/2 top-[40%] -translate-x-1/2 z-20 w-[min(90vw,800px)]" src={MotoWelcome.src} alt="Welcome" />
    <div class="absolute flex flex-col items-center justify-between p-8 w-full z-20">
      <header class="flex justify-end w-full">
        <Menu class="size-14 text-rose-300" />
      </header>
      <footer id="moto-footer" class="absolute bottom-0 m-auto" />
    </div>
  </section>

</Layout>

<style>

  #content, #after, #intro { will-change: transform; }

  #logo-mask {
    background: black;
    mask-image: url("/moto-logo-mask.svg");
    mask-type: luminance;
    mask-position: center 28%;
    mask-repeat: no-repeat;
    mask-size: clamp(5150vh, 3500%, 0vh);
  }

  #outside-black {
    background: #32383b;
    mask-image: linear-gradient(#fff 0 0), url("/moto-logo-mask.svg");
    mask-repeat: no-repeat, no-repeat;
    mask-position: center, center 28%;
    mask-size: 100% 100%, clamp(5150vh, 3500%, 0vh);
    mask-composite: exclude;
  }

  #moto-welcome{
    --reveal: 0%;
    --feather: 28%;
    mask-image: linear-gradient(
      to top,
      black 0%,
      black var(--reveal),
      transparent calc(var(--reveal) + var(--feather))
    );
  }

  .scroll-container {
    height: 250vh;
    position: relative;
  }

  @keyframes float {
  0%,100% { transform: translateY(0); }
  50%     { transform: translateY(-20px); }
}
@keyframes float2 {
  0%,100% { transform: translateY(0) rotate(0deg); }
  50%     { transform: translateY(-14px) rotate(2deg); }
}

</style>

<script>

  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const tl = gsap.timeline({ ease: "power2.out" });

  tl.to("#moto", { duration: 0.8, scale: 1 })
    .to("#logo-mask", { maskSize: "clamp(20vh, 25%, 30vh)" }, 0.10)
    .to("#outside-black", { maskSize: "100% 100%, clamp(20vh, 25%, 30vh)" }, 0.10)
    .to("#light-background", { opacity: 1, duration: 0.4 }, 0.4)
    .to("#logo-mask", { opacity: 0, duration: 0.2 }, 0.5)
    .fromTo("#eyes", { opacity: 0, y: -15 }, { opacity: 1, y: 0, duration: 0.35 }, ">-0.1")
    .fromTo("#moto-welcome", { opacity: 0, "--reveal": "0%" }, { opacity: 1, "--reveal": "100%", duration: 0.5, ease: "power3.out" }, ">-0.1")
    .to("#intro", { yPercent: -100, ease: "none", duration: 1 }, ">")
    .set("#after", { y: 100 })
    .to("#after", { y: 0, duration: 0.1, ease: "power2.out" }, "<");


  ScrollTrigger.create({
    trigger: ".scroll-container",
    start: "top top",
    end: "bottom bottom",
    scrub: 1,
    animation: tl,
    invalidateOnRefresh: true,
  });


</script>

<script type="module">
  const canvas = document.getElementById('space');
  const ctx = canvas.getContext('2d', { alpha: true });
  const DPR = Math.max(1, Math.min(2, window.devicePixelRatio || 1));

  const DENSITY = 0.000035;
  const MIN = 8, MAX_CAP = 18;
  const MOUSE_RADIUS = 120, MOUSE_FORCE = 0.12, FRICTION = 0.998;

  let MAX=0, W=0, H=0, running=true;
  const mouse={x:-9999,y:-9999};

  const media = window.matchMedia('(prefers-reduced-motion: reduce)');
  const setMotion = () => { running = !media.matches; };
  media.addEventListener?.('change', setMotion); setMotion();

  function recomputeMax(){
    const rect = canvas.getBoundingClientRect();
    const area = rect.width * rect.height;
    MAX = Math.min(MAX_CAP, Math.max(MIN, Math.round(area * DENSITY)));
  }
  function resize(){
    const rect = canvas.getBoundingClientRect();
    W=Math.floor(rect.width*DPR);
    H=Math.floor(rect.height*DPR);
    canvas.width=W; canvas.height=H;
    canvas.style.width=rect.width+"px";
    canvas.style.height=rect.height+"px";
    recomputeMax();
    genStars();
    balanceRocks();
  }
  window.addEventListener("resize", resize, {passive:true});

  const rand=(a,b)=>a+Math.random()*(b-a);
  const clamp=(v,a,b)=>Math.max(a,Math.min(b,v));

  
  const STAR_DENSITY = 0.00025;       
  const STAR_MIN = 0.6, STAR_MAX = 1.6; 
  const STARS = [];

  function genStars() {
    STARS.length = 0;
    const rect = canvas.getBoundingClientRect();
    const area = rect.width * rect.height;
    const count = Math.max(40, Math.round(area * STAR_DENSITY));
    for (let i = 0; i < count; i++) {
      STARS.push({
        x: Math.random() * W,
        y: Math.random() * H,
        r: (STAR_MIN + Math.random()*(STAR_MAX-STAR_MIN)) * DPR,
        base: 0.35 + Math.random()*0.45,   
        amp: 0.15 + Math.random()*0.25,    
        spd: 0.6 + Math.random()*1.4,      
        phi: Math.random()*Math.PI*2     
      });
    }
  }

  function drawStars(t) {
    for (const s of STARS) {
      const a = s.base + s.amp * Math.sin(s.phi + t * s.spd);
      ctx.globalAlpha = Math.max(0, Math.min(1, a));
      ctx.beginPath();
      ctx.arc(s.x, s.y, s.r, 0, Math.PI*2);
      ctx.fillStyle = "#fff";
      ctx.fill();
    }
    ctx.globalAlpha = 1;
  }

  // === Assets ===
  const ROCK_IMAGES=[];
  const TOTAL_ROCKS=7;
  let loaded=0;
  const TOTAL_ASSETS=TOTAL_ROCKS+1;

  // tu nueva imagen fija
  const motoEl=new Image();
  motoEl.onload = ()=>{ assetLoaded(); };
  motoEl.onerror = ()=>{ assetLoaded(); };
  motoEl.src="/moto-space.webp";

  function assetLoaded(){ if(++loaded===TOTAL_ASSETS) init(); }

  for(let i=1;i<=TOTAL_ROCKS;i++){
    const img=new Image();
    img.onload=assetLoaded;
    img.onerror=(e)=>console.warn("No pude cargar",img.src,e);
    img.src=`/rock_${String(i).padStart(2,"0")}.png`;
    ROCK_IMAGES.push(img);
  }

  const ROCKS=[];

  function createRock(){
    const depth=rand(0.4,1.6);
    const size=rand(28,96)*depth;
    return{
      x:rand(0,W), y:rand(0,H),
      vx:rand(-0.35,0.35)*depth,
      vy:rand(-0.35,0.35)*depth,
      r:size, d:depth,
      rot:rand(0,Math.PI*2),
      vr:rand(-0.01,0.01)*depth,
      sprite:ROCK_IMAGES[Math.floor(Math.random()*ROCK_IMAGES.length)],
      pinned:false, isMoto:false, nw:0, nh:0
    };
  }

  function createMoto(){
    const a=createRock();
    a.isMoto=true; a.pinned=true;
    a.vx*=0.6; a.vy*=0.6;
    a.nw=motoEl.naturalWidth; 
    a.nh=motoEl.naturalHeight;
    return a;
  }

  function balanceRocks(){
    if(ROCKS.length<MAX){
      const need=MAX-ROCKS.length;
      for(let i=0;i<need;i++) ROCKS.push(createRock());
    } else if(ROCKS.length>MAX){
      let i=0;
      while(ROCKS.length>MAX && i<ROCKS.length){
        if(!ROCKS[i].pinned) ROCKS.splice(i,1); else i++;
      }
    }
  }

  function init(){
    resize();
    balanceRocks();
    if(motoEl.naturalWidth>0) ROCKS.push(createMoto());
    requestAnimationFrame(loop);
  }

  function toCanvasCoords(e){
    const rect=canvas.getBoundingClientRect();
    return {x:(e.clientX-rect.left)*DPR,y:(e.clientY-rect.top)*DPR};
  }
  window.addEventListener("pointermove",e=>{
    const p=toCanvasCoords(e); mouse.x=p.x; mouse.y=p.y;
  },{passive:true});
  window.addEventListener("pointerleave",()=>{mouse.x=-9999;mouse.y=-9999;});

  function loop(){
    if(!running){ctx.clearRect(0,0,W,H);return;}
    ctx.clearRect(0,0,W,H);

    // estrellas primero (fondo)
    const t = performance.now()/1000;
    drawStars(t);

    for(const a of ROCKS){
      const dx=a.x-mouse.x, dy=a.y-mouse.y;
      const dist=Math.hypot(dx,dy);
      if(dist<(MOUSE_RADIUS*a.d)){
        const f=(1-dist/(MOUSE_RADIUS*a.d))*MOUSE_FORCE;
        const nx=dx/(dist||1), ny=dy/(dist||1);
        a.vx+=nx*f*2.0; a.vy+=ny*f*2.0;
      }

      a.x+=a.vx; a.y+=a.vy;
      a.vx*=FRICTION; a.vy*=FRICTION;
      a.rot+=a.vr;

      const s=clamp(a.r,12,256);
      const halfW=a.isMoto?(a.nw/2):(s/2);
      const halfH=a.isMoto?(a.nh/2):(s/2);

      if(a.x<-halfW) a.x=W+halfW;
      if(a.x>W+halfW) a.x=-halfW;
      if(a.y<-halfH) a.y=H+halfH;
      if(a.y>H+halfH) a.y=-halfH;

      ctx.save();
      ctx.translate(a.x,a.y);
      ctx.rotate(a.rot);
      ctx.globalAlpha = 1;

      if (a.isMoto) {
        const scale = 0.5; // ajusta el tamaño del webp
        const w = a.nw * scale;
        const h = a.nh * scale;
        ctx.drawImage(motoEl, -w/2, -h/2, w, h);
      } else {
        ctx.drawImage(a.sprite, -s/2, -s/2, s, s);
      }
      ctx.restore();
    }
    requestAnimationFrame(loop);
  }
</script>

<script type="module">

  const CONTRACT = "0x9a9de07629EF283c2d700eFD3958f59B7d528453";
  const PLATFORM = "base";

  const API = `https://api.coingecko.com/api/v3/coins/${PLATFORM}/contract/${CONTRACT}`;

  const $ = (sel) => document.querySelector(sel);
  const set = (sel, val) => { const el = $(sel); if (el && val != null) el.textContent = val; };

  const usdPrice = (n) =>
    (n == null ? "—" :
      new Intl.NumberFormat("en-US", {
        style: "currency",
        currency: "USD",
        maximumFractionDigits: 6
      }).format(n));

  const usdNoDecimals = (n) =>
    (n == null ? "—" :
      new Intl.NumberFormat("en-US", {
        style: "currency",
        currency: "USD",
        maximumFractionDigits: 0
      }).format(n));

  const num = (n) => (n == null ? "—" : new Intl.NumberFormat("en-US").format(n));

  async function loadCG() {
    try {
      const res = await fetch(API, { headers: { accept: "application/json" } });
      if (!res.ok) throw new Error(String(res.status));
      const data = await res.json();
      const m = data.market_data ?? {};

      set("#stat-price", usdPrice(m.current_price?.usd));
      set("#stat-mcap", usdNoDecimals(m.market_cap?.usd));
      set("#stat-vol24", usdNoDecimals(m.total_volume?.usd));
      set("#stat-supply", num(m.circulating_supply ?? m.total_supply));

    } catch (e) {
      console.error("CoinGecko error:", e);
    }
  }

  loadCG();
</script>

